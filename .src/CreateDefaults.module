' Gambas module file

' Author Westwood JustLostintime
'Released Under:
'  GNU GENERAL Public LICENSE
'  Version 3, 29 June 2007
'  See project license file.

Public Sub _call()

  With FMain

    If Not Exist(.AsmComputerDefinitions) Then

      Try Shell.MkDir(.AsmComputerDefinitions)
      Dim Comp As New ComputerDef
      Comp.Name = "Default"
      Comp.Speed = 500
      Comp.AutoStart = &h0200
      Comp.AutoStartActive = True
      Comp["RomMemory"] = [&h0F000, &h01000, .AsmBinaryDirectory &/ "ctmon65.bin"]
      Comp["RamMemory"] = [&h0000, &h0E000, .AsmBinaryDirectory &/ "mytb.bin"]
      Comp["TTYSIM"] = [&h0E000, 16, "Tiny Basic running with CTMON65 monitor"]
      Comp["PiaDisk"] = [&h0E010, 16, .AsmDrivesDirectory & ":disk0:disk1:disk2:disk3"]
      Comp["HaltButton"] = [0, 0, "Quit Button"]
      Comp.Save(.AsmComputerDefinitions)

      Comp = New ComputerDef
      Comp.Name = "CTMON2Rams"
      Comp.Speed = 500
      Comp.AutoStart = &h0200
      Comp.AutoStartActive = True
      Comp["RomMemory"] = [&h0F000, &h01000, .AsmBinaryDirectory &/ "ctmon65.bin"]
      Comp["RamMemory"] = [&h0000, &h00200, ""]
      Comp["RamMemory:1"] = [&h0200, &h0DE00, .AsmBinaryDirectory &/ "mytb.bin"]
      Comp["TTYSIM"] = [&h0E000, 16, "Tiny Basic running with CTMON65 monitor"]
      Comp["PiaDisk"] = [&h0E010, 16, .AsmDrivesDirectory & ":disk0:disk1:disk2:disk3"]
      Comp["HaltButton"] = [0, 0, "Quit Button"]
      Comp.Save(.AsmComputerDefinitions)

      Comp = New ComputerDef
      Comp.Name = "CTMONMMU"
      Comp.Speed = 500
      Comp.AutoStart = &h0200
      Comp.AutoStartActive = True
      Comp["RomMemory"] = [&h0F000, &h01000, .AsmBinaryDirectory &/ "ctmon65.bin"]
      Comp["RamMemory"] = [&h0000, &h0200, ""]
      Comp["MMU"] = [&h0200, &h0DE00, "&h0E030,20;" & .AsmBinaryDirectory &/ "mytb.bin"]
      Comp["TTYSIM"] = [&h0E000, 16, "Tiny Basic running with CTMON65 monitor"]
      Comp["PiaDisk"] = [&h0E010, 16, .AsmDrivesDirectory & ":disk0:disk1:disk2:disk3"]
      Comp["HaltButton"] = [0, 0, "Quit Button"]
      Comp.Save(.AsmComputerDefinitions)

      Comp = New ComputerDef
      Comp.Name = "CTMON65"
      Comp.Speed = 500
      Comp.AutoStart = -1
      Comp.AutoStartActive = True
      Comp["RomMemory"] = [&h0F000, &h01000, .AsmBinaryDirectory &/ "ctmon65.bin"]
      Comp["RamMemory"] = [&h0000, &h0E000, .AsmBinaryDirectory &/ "mytb.bin"]
      Comp["TTYSIM"] = [&h0E000, 16, "CTMON65 Running with Basic at $0200"]
      Comp["PiaDisk"] = [&h0E010, 16, .AsmDrivesDirectory & ":disk0:disk1:disk2:disk3"]
      Comp["ResetButton"] = [0, 0, "Reset button"]
      Comp["HaltButton"] = [0, 0, "Quit Button"]
      Comp.Save(.AsmComputerDefinitions)

      Comp = New ComputerDef
      Comp.Name = "CTMONTIMER"
      Comp.Speed = 500
      Comp.AutoStart = &h0200
      Comp.AutoStartActive = True
      Comp["RomMemory"] = [&h0F000, &h01000, .AsmBinaryDirectory &/ "ctmon65.bin"]
      Comp["RamMemory"] = [&h0000, &h0E000, .AsmBinaryDirectory &/ "useirq.bin"]
      Comp["TTYSIM"] = [&h0E000, 16, "CTMON65 Running with Timer at $E020"]
      Comp["PiaDisk"] = [&h0E010, 16, .AsmDrivesDirectory & ":disk0:disk1:disk2:disk3"]
      Comp["IrqTimer"] = [&h0E020, 5, "1000"]
      Comp["CycleTimer"] = [&h0E030, 5, "5000"]
      Comp["ResetButton"] = [0, 0, "Reset button"]
      Comp["HaltButton"] = [0, 0, "Quit Button"]
      Comp["NMIButton"] = [0, 0, "NMI Button"]
      Comp["IrqButton"] = [0, 0, "IRQ Button"]
      Comp["ShowMhz"] = [0, 0, "3000"]

      Comp.Save(.AsmComputerDefinitions)

    Endif

    copyDirectory("dev", .AsmDeviceDirectory)
    copyDirectory("asm", .AsmSourceDirectory)
    copyDirectory("bin", .AsmBinaryDirectory)
    copyDirectory("drives", .AsmDrivesDirectory)
    copyDirectory("doc", .ASMDocumentDirectory)

  End With

Catch
  Error ("Create Defaults Error: "); Error.text;; Error.where

End

Sub copyDirectory(path As String, topath As String)

  Debug ("Create Default :");; toPath;; "From";; path
  If Not Exist(toPath) Then
    Try Shell.MkDir(ToPath)
    If Error Then
      Debug ("Unable to make directory ");; topath;; Error.text
    Endif
  Else
    Return
  Endif

  For Each s As String In Dir(path, "*", gb.directory)
    copyDirectory(path &/ s, ToPath &/ s)
  Next

  For Each s As String In Dir(path, "*", gb.file)
    If Right(s, 1) = "~" Then Continue
    Debug ("Copy :");; s
    Try Copy path &/ s To ToPath &/ s
    If Error Then
      Debug ("Unable to copy file ");; ToPath &/ s;; ("from");; path &/ s
    Endif
  Next

End


