' Gambas class file
'' Device TTY
'' this simulates a tty device Ansi complient
'' This open a seperate window and allos the entry
'' of text to the cpu, it acts like a rs232 connected
'' device. This is configured to work with the
'' CTMON65 default rom, but may be used more generally

fast unsafe
use "gb.form"

Public MemoryStart As Long = 0
Public MemoryEnd As Long = 0
Public MemoryLen As Long = 0
Public MyObs As Observer

Property read name as string use $name
Property Read hidden as boolean use $hidden = false

HaltFORM As Form
HaltButton as button

event Reset()
event irq()
event nmi()
event halt(Reason as string)

public sub _new(address as long, len as long, parameters as string)

  $NAME="HaltButton"
  OpenHaltWindow(parameters)

end

Public sub _get() as variant
   return 0
end

Public sub _put(value as variant)
end

Public sub halt()

   print "closing the Halt button"
   HaltForm.Persistent = false
   HaltFORM.close()

end

Sub openHaltWindow(optional thetitle as string = "6502 Big Halt Button")

  HaltForm = New Form As "MyHaltButton"
  HaltForm.title = TheTitle
  HaltForm.persistent = true
  HaltButton = new button(HaltForm) as "MyButton"
  HaltForm.h = 200
  HaltForm.w = 200
  HaltButton.text = "Quit !"
  HaltForm.show()

End

Public Sub MyButton_click()
    raise Halt("User request termination")
end

Public sub MyHaltButton_resize()
    HaltButton.h = HaltForm.h
    HaltButton.w = HaltForm.w
end

Public Sub MyHaltButton_hide()
    HaltForm.show()
END

Public Sub MyHaltButton_open()

  HaltForm.x = Settings["HaltForm/Window/X", 200]
  HaltForm.y = Settings["HaltForm/Window/Y", 60]
  HaltForm.h = Settings["HaltForm/Window/H", 200]
  HaltForm.w = Settings["HaltForm/Window/w", 200]

End

Public Sub MyHaltButton_close()

  Settings["HaltForm/Window/X"] = HaltForm.X
  Settings["HaltForm/Window/Y"] = HaltForm.y
  Settings["HaltForm/Window/H"] = HaltForm.h
  Settings["HaltForm/Window/w"] = HaltForm.w

End