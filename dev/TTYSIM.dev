' Gambas class file
'Released Under:
'  GNU GENERAL Public LICENSE
'  Version 3, 29 June 2007
'  See project license file.

'' Device TTY
'' This simulates a tty device that is Ansi complient
'' This opens a seperate window and allows the entry
'' of text to the cpu, it acts like a rs232 connected
'' device. This is configured to work with the
'' CTMON65 default rom, but may be used more generally

fast unsafe
use "gb.form"
use "gb.form.terminal"

Public MemoryStart As Long = 0
Public MemoryEnd As Long = 0
Public MemoryLen As Long = 0
Public TermOut As TerminalView
Public LastValue As Byte
Public Databuffer As Byte[]
Public EchoChar As Boolean = false
Public MyObs As Observer

Property read name as string use $name
Property Read hidden as boolean use $hidden = false

TTYFORM As Form

Public Sub _new(Start As Long, len As Long, StartMessage As string)

  openTTYWindow()

  MemoryStart = Start
  MemoryEnd = Start
  MemoryLen = 16
  TermOut.Print("Ready at " & Hex(Start, 6) & "\n\r")
  Debug "TTY Defined at : "; Hex(Start, 6); " For length("; len; ")"; Hex(len)
  if StartMessage <> "" then
  TermOut.Print(StartMessage & "\n\r")
  endif
  DataBuffer = New Byte[]
  $name = "TTY"
End

Public sub halt()
   debug "TTY Halted"
   TTYFORM.persistent = false
   TTYFORM.close()
end

Public Sub _Put(Value As Byte, address as long)
   'print "TTY: Write Request Address=$";hex(address,4);;"With Data=$";hex(Value,2)
  if $hidden then
      TTYForm.Show()
      $hidden = false
  endif
  if address = MemoryStart+1 then         'put the data
    LastValue = value
    'if value = 10 or value = 13 then
   '   TermOut.Print("\n\r")
   ' else
      TermOut.Print(Chr(Value))
      TermOut.refresh()
   ' endif
  else                                              'Write Status and config stuff
    'print "Status set ACIA"&bin(Value)
  endif
End

Public Sub _get(address As Long) As Byte
 'print "TTY: Read Request Address=$";hex(address,4)
 if $hidden then
      TTYForm.Show()
      $hidden = false
  endif
 If address = MemoryStart + 1 Then          'Then Read A byte
        if DataBuffer.count > 0 Then
           Return DataBuffer.Pop()
        Else
           Return 0
        Endif
 else                                                ' Read The Status register
   dim status as byte = 2                            ' Can Always write
   'Status = bset(status,1)                          ' Can Always write something
   if DataBuffer.count > 0 then
      'debug "TTY : Byte Avaiable for read COUNT = ";DataBuffer.count
      Status += 1                                    'Set if something to read
      'Status = bset(status,0)                       ' set if something to be read
    'else
    ' Status = bclr(status,0)
    ENDIF
  endif

  return status

End

Public Sub KeyPress(bkeypress As Byte)

 'if bkeypress = 13 then bKeyPress = 10
 DataBuffer.Add(bKeypress, 0)
 If EchoChar Then
    TermOut.Print(Chr(bKeyPress))
    If bkeypress = 13 Then
      TermOut.Print("\n")
    Endif
 Endif

End


Public Sub _InRange(Address As Long) As Boolean

  If Address >= MemoryStart And Address <= MemoryEnd Then Return True
  Return False

End

Sub openTTYWindow()

  TTYForm = New Form As "MyTerminal"
  TTYFORM.title = " 6502 tty "
  TTYForm.persistent = true
  TTYForm.arrangement = arrange.fill

  TermOut = New TerminalView(TTYForm) As "MyView"
  TermOut.Enabled = True
  TermOut.ReadOnly = False
  TermOut.Width = TTYForm.width - 2
  TermOut.Height = TTYForm.Height - 2
  TermOut.Y = 1
  TermOut.X = 1
  TTYFORM.show()
  TermOut.print("\e[32m")
End

Public Sub MyTerminal_open()

  TTYForm.x = Settings["TTYForm/Window/X", 100]
  TTYForm.y = Settings["TTYForm/Window/Y", 100]
  TTYForm.h = Settings["TTYForm/Window/H", 700]
  TTYForm.w = Settings["TTYForm/Window/w", 600]

End

Public Sub MyTerminal_close()

  Settings["TTYForm/Window/X"] = TTYForm.X
  Settings["TTYForm/Window/Y"] = TTYForm.y
  Settings["TTYForm/Window/H"] = TTYForm.h
  Settings["TTYForm/Window/w"] = TTYForm.w
  Settings.Save()

End

Public sub MyTerminal_resize()
    TermOut.h = TTYForm.h - 2
    TermOut.w = TTYForm.w - 2
end

Public Sub MyTerminal_hide()
    $Hidden = true
END


Public Sub MyView_KeyPress()
 dim mykey as string = key.text
 'print key.text;
 if isAscii(mykey)          'isletter(mykey) or isnumber(mykey) or ispunct(mykey) or mykey = "\n" or mykey = "\r" OR isSpace(mykey) Then
      KeyPress(Asc(Key.text))
 endif

End


