10 REM PROGRAM "100doors.bas"
11 REM There are 100 doors in a row that are all initially closed.
12 REM You make 100 passes by the doors.
13 REM The first time through, visit every door and  toggle  the doors
14 REM        (if the door is closed, open it; if it is open,close it).
15 REM The second time, only visit every 2nd door   (door #2, #4, #6, ...),   and toggle it.
16 REM The third time, visit every 3rd door   (door #3, #6, #9, ...), etc,  
17 REM        until you only visit the 100th door.
18 REM Answer the question:   what state are the doors in after the last pass?
19 REM        Which are open, which are closed?
50 gosub 100  : Rem Run the optimized solution
60 gosub 1000 : Rem The long way
90 end

100 Rem Optimized solution
105 ? "100 Doors optimized"
110 LET N=1:LET D=3
120 PRINT N,
140 LET N=N+D:LET D=D+2
150 if N<=100 goto 120
155 ? "Done"
160 return

1000 Rem Full test of doors long solution
1005 ? "100 Doors the full Scan"
1010 m = 45056  : Rem the memory location for array
1015 i = 1
1020 if i > 100 goto 1200
1030 j = i 
1040 if j > 100 then goto 1080
1050 poke (m-j), (peek(m-j)= 0) 
1060 j=j+i
1070 goto 1040
1080 i=i+1
1090 goto 1020
1200 Rem Print out the result
1210 i = 1
1220 if i > 100 ? "Done":return
1230 if peek(m-i) ? i,
1240 i=i+1 : goto 1220