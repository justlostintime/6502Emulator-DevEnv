5 rem can have up to 10 tasks, main is always 1, so can have 9 more taskscls
7 cls:?27$;"[?25l";: rem turn off the cursor
10 x= task(100,25) : @[7]=task(1000): @[6]=task(2000,21)
12 i=1000 : rem number of cycles for main loop
15 @[0] = task(2000,50):@[1] = task(2000,10) :@[2] = task(2000,30):@[3] = task(2000,50):@[4] = task(2000,28) :@[5] = task(2000,17)

20 ?27$;"[5;10H";"Main Line at ";a;"   of ";i;

21 inc a
22 ?27$;"[5;23H";a;
26 if not stat(x)  x=task(100,20) : inc b : ?27$;"[5;40HRestart Task 100() ";b
30 taskn : if a <= i goto 21

35 ?27$;"[30;10H";27$;"[?25hEnd program" : rem turn on the cursor
40 a = 0
50 kill(@[a])         : rem kill any running tasks
60 inc a : if a <= 7 goto 50
70 kill(x)
80 cls
90 end


100 rem test task 100(numberOfCycles)
105 ?27$;"[6;10HStart Task 1 PID ";PID;
106 ?27$;"[6;40HTask 1 PID ";PID;" Count =";
110 inc b
112 ?27$;"[6;67H";b;" "
115 if b <= #[0] goto 110
118 ?27$;"[6;40HTask 1 PID ";PID;" Exits ";
120 return 


1000 rem a second task
1005 ?27$;"[7;10HTask 2 PID ";pid;" Started";
1007 ?27$;"[7;40HTask 2 PID ";pid;" Count=";
1010 inc c
1015 ?27$;"[7;67H";c
1017 taskn
1020 goto 1010


2000 Rem Fast Task 2000(reportingCycle)
2015 ?27$;"[";PID/21+10;";10HTask Gen PID ";PID;" Started";:taskn
2017 ?27$;"[";PID/21+10;";40HTask Gen PID ";PID;" Alive ";pid/21 ;"   ";:taskn
2020 inc a
2030 if a%#[0]=z ?27$;"[";PID/21+10;";67H";a
2035 taskn
2040 goto 2020
