ca65 V2.19 - Git 544a49c
Main file   : primes.s
Current file: primes.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.19 - Git 544a49c
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.19 - Git 544a49c"
000000r 1               	.setcpu		"65C02"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	on
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.dbg		file, "primes.c", 1680, 1676225530
000000r 1               	.dbg		file, "/usr/share/cc65/include/stdio.h", 6887, 1605895793
000000r 1               	.dbg		file, "/usr/share/cc65/include/stdlib.h", 6885, 1605895793
000000r 1               	.dbg		file, "/usr/share/cc65/include/string.h", 5492, 1605895793
000000r 1               	.dbg		file, "/usr/share/cc65/include/fcntl.h", 3550, 1605895793
000000r 1               	.dbg		file, "/usr/share/cc65/include/errno.h", 5854, 1605895793
000000r 1               	.dbg		file, "/usr/share/cc65/include/unistd.h", 4309, 1605895793
000000r 1               	.dbg		file, "../../cc65Integration/include/ctmon65.h", 5258, 1676224656
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.dbg		sym, "stdin", "00", extern, "_stdin"
000000r 1               	.dbg		sym, "stdout", "00", extern, "_stdout"
000000r 1               	.dbg		sym, "fgets", "00", extern, "_fgets"
000000r 1               	.dbg		sym, "fprintf", "00", extern, "_fprintf"
000000r 1               	.dbg		sym, "printf", "00", extern, "_printf"
000000r 1               	.dbg		sym, "malloc", "00", extern, "_malloc"
000000r 1               	.dbg		sym, "atoi", "00", extern, "_atoi"
000000r 1               	.dbg		sym, "init_timer", "00", extern, "_init_timer"
000000r 1               	.dbg		sym, "get_timer", "00", extern, "_get_timer"
000000r 1               	.dbg		sym, "get_timer_tick_length", "00", extern, "_get_timer_tick_length"
000000r 1               	.dbg		sym, "stop_timer", "00", extern, "_stop_timer"
000000r 1               	.import		_stdin
000000r 1               	.import		_stdout
000000r 1               	.import		_fgets
000000r 1               	.import		_fprintf
000000r 1               	.import		_printf
000000r 1               	.import		_malloc
000000r 1               	.import		_atoi
000000r 1               	.import		_init_timer
000000r 1               	.import		_get_timer
000000r 1               	.import		_get_timer_tick_length
000000r 1               	.import		_stop_timer
000000r 1               	.export		_printflags
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               S0003:
000000r 1  43 6F 6D 70  	.byte	$43,$6F,$6D,$70,$6C,$65,$74,$65,$64,$20,$73,$63,$61,$6E,$20,$69
000004r 1  6C 65 74 65  
000008r 1  64 20 73 63  
000010r 1  6E 20 25 6C  	.byte	$6E,$20,$25,$6C,$75,$2E,$25,$6C,$75,$20,$73,$65,$63,$6F,$6E,$64
000014r 1  75 2E 25 6C  
000018r 1  75 20 73 65  
000020r 1  73 0A 4C 69  	.byte	$73,$0A,$4C,$69,$73,$74,$20,$6F,$66,$20,$74,$68,$65,$20,$50,$72
000024r 1  73 74 20 6F  
000028r 1  66 20 74 68  
000030r 1  69 6D 65 73  	.byte	$69,$6D,$65,$73,$20,$30,$2D,$25,$64,$3A,$0A,$00
000034r 1  20 30 2D 25  
000038r 1  64 3A 0A 00  
00003Cr 1               S0001:
00003Cr 1  45 6E 74 65  	.byte	$45,$6E,$74,$65,$72,$20,$74,$68,$65,$20,$6E,$75,$6D,$62,$65,$72
000040r 1  72 20 74 68  
000044r 1  65 20 6E 75  
00004Cr 1  20 6F 66 20  	.byte	$20,$6F,$66,$20,$70,$72,$69,$6D,$65,$73,$20,$32,$2D,$25,$64,$3A
000050r 1  70 72 69 6D  
000054r 1  65 73 20 32  
00005Cr 1  3E 00        	.byte	$3E,$00
00005Er 1               S0002:
00005Er 1  20 56 61 6C  	.byte	$20,$56,$61,$6C,$75,$65,$20,$6D,$75,$73,$74,$20,$62,$65,$20,$62
000062r 1  75 65 20 6D  
000066r 1  75 73 74 20  
00006Er 1  65 74 77 65  	.byte	$65,$74,$77,$65,$65,$6E,$20,$32,$20,$61,$6E,$64,$20,$25,$64,$0A
000072r 1  65 6E 20 32  
000076r 1  20 61 6E 64  
00007Er 1  00           	.byte	$00
00007Fr 1               S0006:
00007Fr 1  0A 54 6F 74  	.byte	$0A,$54,$6F,$74,$61,$6C,$20,$50,$72,$69,$6D,$65,$73,$20,$3D,$20
000083r 1  61 6C 20 50  
000087r 1  72 69 6D 65  
00008Fr 1  25 64 0A 00  	.byte	$25,$64,$0A,$00
000093r 1               S0007:
000093r 1  0A 25 34 64  	.byte	$0A,$25,$34,$64,$20,$3A,$20,$00
000097r 1  20 3A 20 00  
00009Br 1               S0004:
00009Br 1  0A 3A 3A 20  	.byte	$0A,$3A,$3A,$20,$00
00009Fr 1  00           
0000A0r 1               S0005:
0000A0r 1  20 25 36 64  	.byte	$20,$25,$36,$64,$00
0000A4r 1  00           
0000A5r 1               S0008:
0000A5r 1  25 31 64 20  	.byte	$25,$31,$64,$20,$00
0000A9r 1  00           
0000AAr 1               S0009:
0000AAr 1  0A 0A 00     	.byte	$0A,$0A,$00
0000ADr 1               
0000ADr 1               ; ---------------------------------------------------------------
0000ADr 1               ; void __near__ printflags (char *flags, int count)
0000ADr 1               ; ---------------------------------------------------------------
0000ADr 1               
0000ADr 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_printflags: near
000000r 1               
000000r 1               	.dbg	func, "printflags", "00", extern, "_printflags"
000000r 1               	.dbg	sym, "flags", "00", auto, 2
000000r 1               	.dbg	sym, "count", "00", auto, 0
000000r 1               	.dbg	sym, "i", "00", auto, -2
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               ;
000000r 1               ; void printflags(char *flags, int count) {
000000r 1               ;
000000r 1               	.dbg	line, "primes.c", 74
000000r 1  20 rr rr     	jsr     pushax
000003r 1               ;
000003r 1               ; for(i=0;i<count;i++) {
000003r 1               ;
000003r 1               	.dbg	line, "primes.c", 76
000003r 1  20 rr rr     	jsr     decsp2
000006r 1  A9 00        	lda     #$00
000008r 1  92 rr        	sta     (sp)
00000Ar 1  A0 01        	ldy     #$01
00000Cr 1  91 rr        	sta     (sp),y
00000Er 1  20 rr rr     L0002:	jsr     pushw0sp
000011r 1  A0 05        	ldy     #$05
000013r 1  B1 rr        	lda     (sp),y
000015r 1  AA           	tax
000016r 1  88           	dey
000017r 1  B1 rr        	lda     (sp),y
000019r 1  20 rr rr     	jsr     tosicmp
00001Cr 1  10 54        	bpl     L0003
00001Er 1               ;
00001Er 1               ; if( i % 20 == 0) printf("\n%4d : ",i);
00001Er 1               ;
00001Er 1               	.dbg	line, "primes.c", 77
00001Er 1  20 rr rr     	jsr     pushw0sp
000021r 1  A0 00        	ldy     #$00
000023r 1  A2 00        	ldx     #$00
000025r 1  A9 14        	lda     #$14
000027r 1  20 rr rr     	jsr     tosmoda0
00002Ar 1  E0 00        	cpx     #$00
00002Cr 1  D0 15        	bne     L0006
00002Er 1  C9 00        	cmp     #$00
000030r 1  D0 11        	bne     L0006
000032r 1  A9 rr        	lda     #<(S0007)
000034r 1  A2 rr        	ldx     #>(S0007)
000036r 1  20 rr rr     	jsr     pushax
000039r 1  A0 05        	ldy     #$05
00003Br 1  20 rr rr     	jsr     pushwysp
00003Er 1  A0 04        	ldy     #$04
000040r 1  20 rr rr     	jsr     _printf
000043r 1               ;
000043r 1               ; printf("%1d ",flags[i]);
000043r 1               ;
000043r 1               	.dbg	line, "primes.c", 78
000043r 1  A9 rr        L0006:	lda     #<(S0008)
000045r 1  A2 rr        	ldx     #>(S0008)
000047r 1  20 rr rr     	jsr     pushax
00004Ar 1  A0 06        	ldy     #$06
00004Cr 1  B1 rr        	lda     (sp),y
00004Er 1  A0 02        	ldy     #$02
000050r 1  18           	clc
000051r 1  71 rr        	adc     (sp),y
000053r 1  85 rr        	sta     ptr1
000055r 1  A0 07        	ldy     #$07
000057r 1  B1 rr        	lda     (sp),y
000059r 1  A0 03        	ldy     #$03
00005Br 1  71 rr        	adc     (sp),y
00005Dr 1  85 rr        	sta     ptr1+1
00005Fr 1  B2 rr        	lda     (ptr1)
000061r 1  20 rr rr     	jsr     pusha0
000064r 1  A0 04        	ldy     #$04
000066r 1  20 rr rr     	jsr     _printf
000069r 1               ;
000069r 1               ; for(i=0;i<count;i++) {
000069r 1               ;
000069r 1               	.dbg	line, "primes.c", 76
000069r 1  A2 00        	ldx     #$00
00006Br 1  A9 01        	lda     #$01
00006Dr 1  20 rr rr     	jsr     addeq0sp
000070r 1  80 9C        	bra     L0002
000072r 1               ;
000072r 1               ; printf("\n\n");
000072r 1               ;
000072r 1               	.dbg	line, "primes.c", 80
000072r 1  A9 rr        L0003:	lda     #<(S0009)
000074r 1  A2 rr        	ldx     #>(S0009)
000076r 1  20 rr rr     	jsr     pushax
000079r 1  A0 02        	ldy     #$02
00007Br 1  20 rr rr     	jsr     _printf
00007Er 1               ;
00007Er 1               ; }
00007Er 1               ;
00007Er 1               	.dbg	line, "primes.c", 81
00007Er 1  4C rr rr     	jmp     incsp6
000081r 1               
000081r 1               	.dbg	line
000081r 1               .endproc
000081r 1               
000081r 1               ; ---------------------------------------------------------------
000081r 1               ; void __near__ main (void)
000081r 1               ; ---------------------------------------------------------------
000081r 1               
000081r 1               .segment	"CODE"
000081r 1               
000081r 1               .proc	_main: near
000081r 1               
000081r 1               	.dbg	func, "main", "00", extern, "_main"
000081r 1               	.dbg	sym, "buffer", "00", auto, -100
000081r 1               	.dbg	sym, "result", "00", auto, -102
000081r 1               	.dbg	sym, "flags", "00", auto, -104
000081r 1               	.dbg	sym, "flaginit", "00", auto, -106
000081r 1               	.dbg	sym, "count", "00", auto, -108
000081r 1               	.dbg	sym, "i", "00", auto, -110
000081r 1               	.dbg	sym, "halfcount", "00", auto, -112
000081r 1               	.dbg	sym, "a", "00", auto, -114
000081r 1               	.dbg	sym, "b", "00", auto, -116
000081r 1               	.dbg	sym, "starttime", "00", auto, -120
000081r 1               	.dbg	sym, "endtime", "00", auto, -124
000081r 1               	.dbg	sym, "final", "00", auto, -128
000081r 1               
000081r 1               .segment	"CODE"
000081r 1               
000081r 1               ;
000081r 1               ; int count = 0,i,halfcount,a,b;
000081r 1               ;
000081r 1               	.dbg	line, "primes.c", 17
000081r 1  A0 6A        	ldy     #$6A
000083r 1  20 rr rr     	jsr     subysp
000086r 1  20 rr rr     	jsr     push0
000089r 1               ;
000089r 1               ; init_timer(timer_10ms);
000089r 1               ;
000089r 1               	.dbg	line, "primes.c", 20
000089r 1  A0 14        	ldy     #$14
00008Br 1  20 rr rr     	jsr     subysp
00008Er 1  A9 01        	lda     #$01
000090r 1  20 rr rr     	jsr     _init_timer
000093r 1               ;
000093r 1               ; while(count <=0 || count >= MaxPrime) {
000093r 1               ;
000093r 1               	.dbg	line, "primes.c", 22
000093r 1  4C rr rr     	jmp     L0004
000096r 1               ;
000096r 1               ; printf("Enter the number of primes 2-%d:>",MaxPrime);
000096r 1               ;
000096r 1               	.dbg	line, "primes.c", 23
000096r 1  A9 rr        L0002:	lda     #<(S0001)
000098r 1  A2 rr        	ldx     #>(S0001)
00009Ar 1  20 rr rr     	jsr     pushax
00009Dr 1  A2 4E        	ldx     #$4E
00009Fr 1  A9 20        	lda     #$20
0000A1r 1  20 rr rr     	jsr     pushax
0000A4r 1  A0 04        	ldy     #$04
0000A6r 1  20 rr rr     	jsr     _printf
0000A9r 1               ;
0000A9r 1               ; result = fgets(buffer,100,stdin);
0000A9r 1               ;
0000A9r 1               	.dbg	line, "primes.c", 24
0000A9r 1  20 rr rr     	jsr     decsp4
0000ACr 1  A5 rr        	lda     sp
0000AEr 1  A6 rr        	ldx     sp+1
0000B0r 1  18           	clc
0000B1r 1  69 20        	adc     #$20
0000B3r 1  90 01        	bcc     L0009
0000B5r 1  E8           	inx
0000B6r 1  A0 02        L0009:	ldy     #$02
0000B8r 1  91 rr        	sta     (sp),y
0000BAr 1  C8           	iny
0000BBr 1  8A           	txa
0000BCr 1  91 rr        	sta     (sp),y
0000BEr 1  A9 64        	lda     #$64
0000C0r 1  92 rr        	sta     (sp)
0000C2r 1  A0 01        	ldy     #$01
0000C4r 1  A9 00        	lda     #$00
0000C6r 1  91 rr        	sta     (sp),y
0000C8r 1  AD rr rr     	lda     _stdin
0000CBr 1  AE rr rr     	ldx     _stdin+1
0000CEr 1  20 rr rr     	jsr     _fgets
0000D1r 1  A0 1A        	ldy     #$1A
0000D3r 1  20 rr rr     	jsr     staxysp
0000D6r 1               ;
0000D6r 1               ; if(result == NULL) continue;
0000D6r 1               ;
0000D6r 1               	.dbg	line, "primes.c", 25
0000D6r 1  E0 00        	cpx     #$00
0000D8r 1  D0 04        	bne     L0033
0000DAr 1  C9 00        	cmp     #$00
0000DCr 1  F0 43        	beq     L0004
0000DEr 1               ;
0000DEr 1               ; count = atoi(buffer);
0000DEr 1               ;
0000DEr 1               	.dbg	line, "primes.c", 26
0000DEr 1  A5 rr        L0033:	lda     sp
0000E0r 1  A6 rr        	ldx     sp+1
0000E2r 1  18           	clc
0000E3r 1  69 1C        	adc     #$1C
0000E5r 1  90 01        	bcc     L000C
0000E7r 1  E8           	inx
0000E8r 1  20 rr rr     L000C:	jsr     _atoi
0000EBr 1  A0 14        	ldy     #$14
0000EDr 1  20 rr rr     	jsr     staxysp
0000F0r 1               ;
0000F0r 1               ; if (count <= 1 || count > MaxPrime) {
0000F0r 1               ;
0000F0r 1               	.dbg	line, "primes.c", 27
0000F0r 1  C9 02        	cmp     #$02
0000F2r 1  8A           	txa
0000F3r 1  E9 00        	sbc     #$00
0000F5r 1  50 02        	bvc     L000E
0000F7r 1  49 80        	eor     #$80
0000F9r 1  30 13        L000E:	bmi     L0030
0000FBr 1  A0 15        	ldy     #$15
0000FDr 1  B1 rr        	lda     (sp),y
0000FFr 1  AA           	tax
000100r 1  88           	dey
000101r 1  B1 rr        	lda     (sp),y
000103r 1  C9 21        	cmp     #$21
000105r 1  8A           	txa
000106r 1  E9 4E        	sbc     #$4E
000108r 1  70 02        	bvs     L0010
00010Ar 1  49 80        	eor     #$80
00010Cr 1  10 3E        L0010:	bpl     L0035
00010Er 1               ;
00010Er 1               ; printf(" Value must be between 2 and %d\n",MaxPrime);
00010Er 1               ;
00010Er 1               	.dbg	line, "primes.c", 28
00010Er 1  A9 rr        L0030:	lda     #<(S0002)
000110r 1  A2 rr        	ldx     #>(S0002)
000112r 1  20 rr rr     	jsr     pushax
000115r 1  A2 4E        	ldx     #$4E
000117r 1  A9 20        	lda     #$20
000119r 1  20 rr rr     	jsr     pushax
00011Cr 1  A0 04        	ldy     #$04
00011Er 1  20 rr rr     	jsr     _printf
000121r 1               ;
000121r 1               ; while(count <=0 || count >= MaxPrime) {
000121r 1               ;
000121r 1               	.dbg	line, "primes.c", 22
000121r 1  A0 15        L0004:	ldy     #$15
000123r 1  B1 rr        	lda     (sp),y
000125r 1  AA           	tax
000126r 1  88           	dey
000127r 1  B1 rr        	lda     (sp),y
000129r 1  C9 01        	cmp     #$01
00012Br 1  8A           	txa
00012Cr 1  E9 00        	sbc     #$00
00012Er 1  50 02        	bvc     L0005
000130r 1  49 80        	eor     #$80
000132r 1  10 03 4C rr  L0005:	jmi     L0002
000136r 1  rr           
000137r 1  C8           	iny
000138r 1  B1 rr        	lda     (sp),y
00013Ar 1  AA           	tax
00013Br 1  88           	dey
00013Cr 1  B1 rr        	lda     (sp),y
00013Er 1  C9 20        	cmp     #$20
000140r 1  8A           	txa
000141r 1  E9 4E        	sbc     #$4E
000143r 1  70 02        	bvs     L0007
000145r 1  49 80        	eor     #$80
000147r 1  10 03 4C rr  L0007:	jmi     L0002
00014Br 1  rr           
00014Cr 1  A2 00        L0035:	ldx     #$00
00014Er 1  8A           	txa
00014Fr 1               ;
00014Fr 1               ; starttime = get_timer();
00014Fr 1               ;
00014Fr 1               	.dbg	line, "primes.c", 34
00014Fr 1  20 rr rr     	jsr     _get_timer
000152r 1  A0 08        	ldy     #$08
000154r 1  20 rr rr     	jsr     steaxysp
000157r 1               ;
000157r 1               ; count++;
000157r 1               ;
000157r 1               	.dbg	line, "primes.c", 36
000157r 1  A0 14        	ldy     #$14
000159r 1  A2 00        	ldx     #$00
00015Br 1  A9 01        	lda     #$01
00015Dr 1  20 rr rr     	jsr     addeqysp
000160r 1               ;
000160r 1               ; halfcount = count/2;
000160r 1               ;
000160r 1               	.dbg	line, "primes.c", 37
000160r 1  A0 15        	ldy     #$15
000162r 1  B1 rr        	lda     (sp),y
000164r 1  AA           	tax
000165r 1  88           	dey
000166r 1  B1 rr        	lda     (sp),y
000168r 1  E0 00        	cpx     #$00
00016Ar 1  10 19        	bpl     L0012
00016Cr 1  85 rr        	sta     regsave
00016Er 1  86 rr        	stx     regsave+1
000170r 1  E0 FF        	cpx     #$FF
000172r 1  D0 02        	bne     L0014
000174r 1  C9 FF        	cmp     #$FF
000176r 1  20 rr rr     L0014:	jsr     boolult
000179r 1  4A           	lsr     a
00017Ar 1  A5 rr        	lda     regsave
00017Cr 1  A6 rr        	ldx     regsave+1
00017Er 1  B0 05        	bcs     L0012
000180r 1  A2 00        	ldx     #$00
000182r 1  8A           	txa
000183r 1  80 03        	bra     L0013
000185r 1  20 rr rr     L0012:	jsr     asrax1
000188r 1  A0 10        L0013:	ldy     #$10
00018Ar 1  20 rr rr     	jsr     staxysp
00018Dr 1               ;
00018Dr 1               ; flags = malloc(count);
00018Dr 1               ;
00018Dr 1               	.dbg	line, "primes.c", 38
00018Dr 1  A0 15        	ldy     #$15
00018Fr 1  B1 rr        	lda     (sp),y
000191r 1  AA           	tax
000192r 1  88           	dey
000193r 1  B1 rr        	lda     (sp),y
000195r 1  20 rr rr     	jsr     _malloc
000198r 1  A0 18        	ldy     #$18
00019Ar 1  20 rr rr     	jsr     staxysp
00019Dr 1               ;
00019Dr 1               ; flaginit = (int *)&flags[3];
00019Dr 1               ;
00019Dr 1               	.dbg	line, "primes.c", 39
00019Dr 1  18           	clc
00019Er 1  69 03        	adc     #$03
0001A0r 1  90 01        	bcc     L0015
0001A2r 1  E8           	inx
0001A3r 1  A0 16        L0015:	ldy     #$16
0001A5r 1  20 rr rr     	jsr     staxysp
0001A8r 1               ;
0001A8r 1               ; for(i=0; i < halfcount; i++) flaginit[i] = 1;
0001A8r 1               ;
0001A8r 1               	.dbg	line, "primes.c", 41
0001A8r 1  A0 12        	ldy     #$12
0001AAr 1  A9 00        	lda     #$00
0001ACr 1  91 rr        	sta     (sp),y
0001AEr 1  C8           	iny
0001AFr 1  91 rr        	sta     (sp),y
0001B1r 1  A0 13        L0016:	ldy     #$13
0001B3r 1  B1 rr        	lda     (sp),y
0001B5r 1  AA           	tax
0001B6r 1  88           	dey
0001B7r 1  B1 rr        	lda     (sp),y
0001B9r 1  A0 10        	ldy     #$10
0001BBr 1  D1 rr        	cmp     (sp),y
0001BDr 1  8A           	txa
0001BEr 1  C8           	iny
0001BFr 1  F1 rr        	sbc     (sp),y
0001C1r 1  50 02        	bvc     L002C
0001C3r 1  49 80        	eor     #$80
0001C5r 1  10 2B        L002C:	bpl     L0017
0001C7r 1  A0 13        	ldy     #$13
0001C9r 1  B1 rr        	lda     (sp),y
0001CBr 1  85 rr        	sta     tmp1
0001CDr 1  88           	dey
0001CEr 1  B1 rr        	lda     (sp),y
0001D0r 1  0A           	asl     a
0001D1r 1  26 rr        	rol     tmp1
0001D3r 1  18           	clc
0001D4r 1  A0 16        	ldy     #$16
0001D6r 1  71 rr        	adc     (sp),y
0001D8r 1  85 rr        	sta     ptr1
0001DAr 1  A5 rr        	lda     tmp1
0001DCr 1  C8           	iny
0001DDr 1  71 rr        	adc     (sp),y
0001DFr 1  85 rr        	sta     ptr1+1
0001E1r 1  A9 01        	lda     #$01
0001E3r 1  92 rr        	sta     (ptr1)
0001E5r 1  A8           	tay
0001E6r 1  3A           	dea
0001E7r 1  91 rr        	sta     (ptr1),y
0001E9r 1  A0 12        	ldy     #$12
0001EBr 1  AA           	tax
0001ECr 1  1A           	ina
0001EDr 1  20 rr rr     	jsr     addeqysp
0001F0r 1  80 BF        	bra     L0016
0001F2r 1               ;
0001F2r 1               ; flags[0]=0;
0001F2r 1               ;
0001F2r 1               	.dbg	line, "primes.c", 42
0001F2r 1  A0 19        L0017:	ldy     #$19
0001F4r 1  B1 rr        	lda     (sp),y
0001F6r 1  85 rr        	sta     ptr1+1
0001F8r 1  88           	dey
0001F9r 1  B1 rr        	lda     (sp),y
0001FBr 1  85 rr        	sta     ptr1
0001FDr 1  A9 00        	lda     #$00
0001FFr 1  92 rr        	sta     (ptr1)
000201r 1               ;
000201r 1               ; flags[1]=0;
000201r 1               ;
000201r 1               	.dbg	line, "primes.c", 43
000201r 1  C8           	iny
000202r 1  B1 rr        	lda     (sp),y
000204r 1  AA           	tax
000205r 1  88           	dey
000206r 1  B1 rr        	lda     (sp),y
000208r 1  1A           	ina
000209r 1  D0 01        	bne     L001A
00020Br 1  E8           	inx
00020Cr 1  85 rr        L001A:	sta     ptr1
00020Er 1  86 rr        	stx     ptr1+1
000210r 1  A9 00        	lda     #$00
000212r 1  92 rr        	sta     (ptr1)
000214r 1               ;
000214r 1               ; flags[2]=1;
000214r 1               ;
000214r 1               	.dbg	line, "primes.c", 44
000214r 1  C8           	iny
000215r 1  B1 rr        	lda     (sp),y
000217r 1  85 rr        	sta     ptr1+1
000219r 1  88           	dey
00021Ar 1  B1 rr        	lda     (sp),y
00021Cr 1  85 rr        	sta     ptr1
00021Er 1  A0 02        	ldy     #$02
000220r 1  A9 01        	lda     #$01
000222r 1  91 rr        	sta     (ptr1),y
000224r 1               ;
000224r 1               ; flags[count]=1;
000224r 1               ;
000224r 1               	.dbg	line, "primes.c", 45
000224r 1  A0 18        	ldy     #$18
000226r 1  B1 rr        	lda     (sp),y
000228r 1  A0 14        	ldy     #$14
00022Ar 1  18           	clc
00022Br 1  71 rr        	adc     (sp),y
00022Dr 1  85 rr        	sta     ptr1
00022Fr 1  A0 19        	ldy     #$19
000231r 1  B1 rr        	lda     (sp),y
000233r 1  A0 15        	ldy     #$15
000235r 1  71 rr        	adc     (sp),y
000237r 1  85 rr        	sta     ptr1+1
000239r 1  A9 01        	lda     #$01
00023Br 1  92 rr        	sta     (ptr1)
00023Dr 1               ;
00023Dr 1               ; for (a = 3; (a+a) < count; a++) {
00023Dr 1               ;
00023Dr 1               	.dbg	line, "primes.c", 47
00023Dr 1  A0 0E        	ldy     #$0E
00023Fr 1  A9 03        	lda     #$03
000241r 1  91 rr        	sta     (sp),y
000243r 1  A9 00        	lda     #$00
000245r 1  C8           	iny
000246r 1  91 rr        	sta     (sp),y
000248r 1  A0 0E        L001C:	ldy     #$0E
00024Ar 1  B1 rr        	lda     (sp),y
00024Cr 1  18           	clc
00024Dr 1  71 rr        	adc     (sp),y
00024Fr 1  48           	pha
000250r 1  C8           	iny
000251r 1  B1 rr        	lda     (sp),y
000253r 1  71 rr        	adc     (sp),y
000255r 1  AA           	tax
000256r 1  68           	pla
000257r 1  A0 14        	ldy     #$14
000259r 1  D1 rr        	cmp     (sp),y
00025Br 1  8A           	txa
00025Cr 1  C8           	iny
00025Dr 1  F1 rr        	sbc     (sp),y
00025Fr 1  50 02        	bvc     L002D
000261r 1  49 80        	eor     #$80
000263r 1  0A           L002D:	asl     a
000264r 1  A9 00        	lda     #$00
000266r 1  AA           	tax
000267r 1  2A           	rol     a
000268r 1  F0 7D        	beq     L001D
00026Ar 1               ;
00026Ar 1               ; if (flags[a] == 0) continue;
00026Ar 1               ;
00026Ar 1               	.dbg	line, "primes.c", 48
00026Ar 1  A0 18        	ldy     #$18
00026Cr 1  B1 rr        	lda     (sp),y
00026Er 1  A0 0E        	ldy     #$0E
000270r 1  18           	clc
000271r 1  71 rr        	adc     (sp),y
000273r 1  85 rr        	sta     ptr1
000275r 1  A0 19        	ldy     #$19
000277r 1  B1 rr        	lda     (sp),y
000279r 1  A0 0F        	ldy     #$0F
00027Br 1  71 rr        	adc     (sp),y
00027Dr 1  85 rr        	sta     ptr1+1
00027Fr 1  B2 rr        	lda     (ptr1)
000281r 1  F0 58        	beq     L001E
000283r 1               ;
000283r 1               ; for (b = a+a; b < count; b += a) flags[b] = 0;
000283r 1               ;
000283r 1               	.dbg	line, "primes.c", 49
000283r 1  88           	dey
000284r 1  B1 rr        	lda     (sp),y
000286r 1  18           	clc
000287r 1  71 rr        	adc     (sp),y
000289r 1  48           	pha
00028Ar 1  C8           	iny
00028Br 1  B1 rr        	lda     (sp),y
00028Dr 1  71 rr        	adc     (sp),y
00028Fr 1  AA           	tax
000290r 1  68           	pla
000291r 1  A0 0C        	ldy     #$0C
000293r 1  20 rr rr     	jsr     staxysp
000296r 1  A0 0D        	ldy     #$0D
000298r 1  B1 rr        L0032:	lda     (sp),y
00029Ar 1  AA           	tax
00029Br 1  88           	dey
00029Cr 1  B1 rr        	lda     (sp),y
00029Er 1  A0 14        	ldy     #$14
0002A0r 1  D1 rr        	cmp     (sp),y
0002A2r 1  8A           	txa
0002A3r 1  C8           	iny
0002A4r 1  F1 rr        	sbc     (sp),y
0002A6r 1  50 02        	bvc     L002E
0002A8r 1  49 80        	eor     #$80
0002AAr 1  10 2F        L002E:	bpl     L001E
0002ACr 1  A0 18        	ldy     #$18
0002AEr 1  B1 rr        	lda     (sp),y
0002B0r 1  A0 0C        	ldy     #$0C
0002B2r 1  18           	clc
0002B3r 1  71 rr        	adc     (sp),y
0002B5r 1  85 rr        	sta     ptr1
0002B7r 1  A0 19        	ldy     #$19
0002B9r 1  B1 rr        	lda     (sp),y
0002BBr 1  A0 0D        	ldy     #$0D
0002BDr 1  71 rr        	adc     (sp),y
0002BFr 1  85 rr        	sta     ptr1+1
0002C1r 1  A9 00        	lda     #$00
0002C3r 1  92 rr        	sta     (ptr1)
0002C5r 1  C8           	iny
0002C6r 1  B1 rr        	lda     (sp),y
0002C8r 1  A0 0C        	ldy     #$0C
0002CAr 1  18           	clc
0002CBr 1  71 rr        	adc     (sp),y
0002CDr 1  91 rr        	sta     (sp),y
0002CFr 1  A0 0F        	ldy     #$0F
0002D1r 1  B1 rr        	lda     (sp),y
0002D3r 1  A0 0D        	ldy     #$0D
0002D5r 1  71 rr        	adc     (sp),y
0002D7r 1  91 rr        	sta     (sp),y
0002D9r 1  80 BD        	bra     L0032
0002DBr 1               ;
0002DBr 1               ; for (a = 3; (a+a) < count; a++) {
0002DBr 1               ;
0002DBr 1               	.dbg	line, "primes.c", 47
0002DBr 1  A0 0E        L001E:	ldy     #$0E
0002DDr 1  A2 00        	ldx     #$00
0002DFr 1  A9 01        	lda     #$01
0002E1r 1  20 rr rr     	jsr     addeqysp
0002E4r 1  4C rr rr     	jmp     L001C
0002E7r 1               ;
0002E7r 1               ; endtime = get_timer();
0002E7r 1               ;
0002E7r 1               	.dbg	line, "primes.c", 52
0002E7r 1  20 rr rr     L001D:	jsr     _get_timer
0002EAr 1  A0 04        	ldy     #$04
0002ECr 1  20 rr rr     	jsr     steaxysp
0002EFr 1               ;
0002EFr 1               ; final = (endtime-starttime) * get_timer_tick_length();
0002EFr 1               ;
0002EFr 1               	.dbg	line, "primes.c", 53
0002EFr 1  A0 07        	ldy     #$07
0002F1r 1  20 rr rr     	jsr     ldeaxysp
0002F4r 1  20 rr rr     	jsr     pusheax
0002F7r 1  A0 0F        	ldy     #$0F
0002F9r 1  20 rr rr     	jsr     ldeaxysp
0002FCr 1  20 rr rr     	jsr     tossubeax
0002FFr 1  20 rr rr     	jsr     pusheax
000302r 1  20 rr rr     	jsr     _get_timer_tick_length
000305r 1  20 rr rr     	jsr     axlong
000308r 1  20 rr rr     	jsr     tosumuleax
00030Br 1  20 rr rr     	jsr     steax0sp
00030Er 1               ;
00030Er 1               ; stop_timer();
00030Er 1               ;
00030Er 1               	.dbg	line, "primes.c", 54
00030Er 1  20 rr rr     	jsr     _stop_timer
000311r 1               ;
000311r 1               ; printf("Completed scan in %lu.%lu seconds\nList of the Primes 0-%d:\n", final/1000,final%1000,count);
000311r 1               ;
000311r 1               	.dbg	line, "primes.c", 56
000311r 1  A9 rr        	lda     #<(S0003)
000313r 1  A2 rr        	ldx     #>(S0003)
000315r 1  20 rr rr     	jsr     pushax
000318r 1  A0 05        	ldy     #$05
00031Ar 1  20 rr rr     	jsr     ldeaxysp
00031Dr 1  20 rr rr     	jsr     pusheax
000320r 1  A2 03        	ldx     #$03
000322r 1  A9 E8        	lda     #$E8
000324r 1  20 rr rr     	jsr     tosudiv0ax
000327r 1  20 rr rr     	jsr     pusheax
00032Ar 1  A0 09        	ldy     #$09
00032Cr 1  20 rr rr     	jsr     ldeaxysp
00032Fr 1  20 rr rr     	jsr     pusheax
000332r 1  A2 03        	ldx     #$03
000334r 1  A9 E8        	lda     #$E8
000336r 1  20 rr rr     	jsr     tosumod0ax
000339r 1  20 rr rr     	jsr     pusheax
00033Cr 1  A0 21        	ldy     #$21
00033Er 1  20 rr rr     	jsr     pushwysp
000341r 1  A0 0C        	ldy     #$0C
000343r 1  20 rr rr     	jsr     _printf
000346r 1               ;
000346r 1               ; a=0;
000346r 1               ;
000346r 1               	.dbg	line, "primes.c", 59
000346r 1  A0 0E        	ldy     #$0E
000348r 1  A9 00        	lda     #$00
00034Ar 1  91 rr        	sta     (sp),y
00034Cr 1  C8           	iny
00034Dr 1  91 rr        	sta     (sp),y
00034Fr 1               ;
00034Fr 1               ; for(b = 0; b<count; b++ ) {
00034Fr 1               ;
00034Fr 1               	.dbg	line, "primes.c", 60
00034Fr 1  A0 0C        	ldy     #$0C
000351r 1  91 rr        	sta     (sp),y
000353r 1  C8           	iny
000354r 1  91 rr        	sta     (sp),y
000356r 1  A0 0D        L0025:	ldy     #$0D
000358r 1  B1 rr        	lda     (sp),y
00035Ar 1  AA           	tax
00035Br 1  88           	dey
00035Cr 1  B1 rr        	lda     (sp),y
00035Er 1  A0 14        	ldy     #$14
000360r 1  D1 rr        	cmp     (sp),y
000362r 1  8A           	txa
000363r 1  C8           	iny
000364r 1  F1 rr        	sbc     (sp),y
000366r 1  50 02        	bvc     L002F
000368r 1  49 80        	eor     #$80
00036Ar 1  10 76        L002F:	bpl     L0026
00036Cr 1               ;
00036Cr 1               ; if(flags[b] == 1) {
00036Cr 1               ;
00036Cr 1               	.dbg	line, "primes.c", 62
00036Cr 1  A0 18        	ldy     #$18
00036Er 1  B1 rr        	lda     (sp),y
000370r 1  A0 0C        	ldy     #$0C
000372r 1  18           	clc
000373r 1  71 rr        	adc     (sp),y
000375r 1  85 rr        	sta     ptr1
000377r 1  A0 19        	ldy     #$19
000379r 1  B1 rr        	lda     (sp),y
00037Br 1  A0 0D        	ldy     #$0D
00037Dr 1  71 rr        	adc     (sp),y
00037Fr 1  85 rr        	sta     ptr1+1
000381r 1  B2 rr        	lda     (ptr1)
000383r 1  C9 01        	cmp     #$01
000385r 1  D0 4F        	bne     L0027
000387r 1               ;
000387r 1               ; if(a%12 == 0) printf("\n:: ");
000387r 1               ;
000387r 1               	.dbg	line, "primes.c", 63
000387r 1  A0 11        	ldy     #$11
000389r 1  20 rr rr     	jsr     pushwysp
00038Cr 1  A0 00        	ldy     #$00
00038Er 1  A2 00        	ldx     #$00
000390r 1  A9 0C        	lda     #$0C
000392r 1  20 rr rr     	jsr     tosmoda0
000395r 1  E0 00        	cpx     #$00
000397r 1  D0 10        	bne     L002A
000399r 1  C9 00        	cmp     #$00
00039Br 1  D0 0C        	bne     L002A
00039Dr 1  A9 rr        	lda     #<(S0004)
00039Fr 1  A2 rr        	ldx     #>(S0004)
0003A1r 1  20 rr rr     	jsr     pushax
0003A4r 1  A0 02        	ldy     #$02
0003A6r 1  20 rr rr     	jsr     _printf
0003A9r 1               ;
0003A9r 1               ; fprintf(stdout," %6d",b);
0003A9r 1               ;
0003A9r 1               	.dbg	line, "primes.c", 64
0003A9r 1  20 rr rr     L002A:	jsr     decsp4
0003ACr 1  AD rr rr     	lda     _stdout
0003AFr 1  A0 02        	ldy     #$02
0003B1r 1  91 rr        	sta     (sp),y
0003B3r 1  C8           	iny
0003B4r 1  AD rr rr     	lda     _stdout+1
0003B7r 1  91 rr        	sta     (sp),y
0003B9r 1  A9 rr        	lda     #<(S0005)
0003BBr 1  92 rr        	sta     (sp)
0003BDr 1  A0 01        	ldy     #$01
0003BFr 1  A9 rr        	lda     #>(S0005)
0003C1r 1  91 rr        	sta     (sp),y
0003C3r 1  A0 13        	ldy     #$13
0003C5r 1  20 rr rr     	jsr     pushwysp
0003C8r 1  A0 06        	ldy     #$06
0003CAr 1  20 rr rr     	jsr     _fprintf
0003CDr 1               ;
0003CDr 1               ; a++;
0003CDr 1               ;
0003CDr 1               	.dbg	line, "primes.c", 65
0003CDr 1  A0 0E        	ldy     #$0E
0003CFr 1  A2 00        	ldx     #$00
0003D1r 1  A9 01        	lda     #$01
0003D3r 1  20 rr rr     	jsr     addeqysp
0003D6r 1               ;
0003D6r 1               ; for(b = 0; b<count; b++ ) {
0003D6r 1               ;
0003D6r 1               	.dbg	line, "primes.c", 60
0003D6r 1  A0 0C        L0027:	ldy     #$0C
0003D8r 1  A2 00        	ldx     #$00
0003DAr 1  A9 01        	lda     #$01
0003DCr 1  20 rr rr     	jsr     addeqysp
0003DFr 1  4C rr rr     	jmp     L0025
0003E2r 1               ;
0003E2r 1               ; printf("\nTotal Primes = %d\n",a);
0003E2r 1               ;
0003E2r 1               	.dbg	line, "primes.c", 70
0003E2r 1  A9 rr        L0026:	lda     #<(S0006)
0003E4r 1  A2 rr        	ldx     #>(S0006)
0003E6r 1  20 rr rr     	jsr     pushax
0003E9r 1  A0 13        	ldy     #$13
0003EBr 1  20 rr rr     	jsr     pushwysp
0003EEr 1  A0 04        	ldy     #$04
0003F0r 1  20 rr rr     	jsr     _printf
0003F3r 1               ;
0003F3r 1               ; }
0003F3r 1               ;
0003F3r 1               	.dbg	line, "primes.c", 72
0003F3r 1  A0 80        	ldy     #$80
0003F5r 1  4C rr rr     	jmp     addysp
0003F8r 1               
0003F8r 1               	.dbg	line
0003F8r 1               .endproc
0003F8r 1               
0003F8r 1               
